create database MODULE2;

--  -------------------------- DML PRACTICE --------------------------

-- -------------------------- INSERT --------------------------
 
 USE  MODULE2;
 
CREATE TABLE STUDENT (
STUDENT_ID INT PRIMARY KEY,
STUDENT_NAME VARCHAR(30),
EMAIL varchar(30),
PHONE_NO varchar(10) NOT NULL
);
DROP TABLE STUDENT;
INSERT INTO STUDENT VALUES(1,"NIDIT","NIDIT@GMAIL.COM","1112223334");
INSERT INTO  STUDENT (STUDENT_ID,STUDENT_NAME,PHONE_NO)  VALUES (3,"RAM","2223331114");
INSERT INTO STUDENT VALUES (3,"SHYAM","SHYAM@GMAIL.COM","2345678910"),(4,"JHON","JHON@GMAIL.COM","2224321231");
INSERT INTO STUDENT VALUES(5,"JHON","JHON99@GMAIL.COM","2224321231");

-- -------------------------- UPDATE -------------------------- 
UPDATE STUDENT SET EMAIL="RAM@GMAIL.COM" WHERE STUDENT_NAME="RAM";

-- -------------------------- SELECT --------------------------
SELECT * FROM STUDENT;
SELECT STUDENT_NAME FROM STUDENT;
SELECT STUDENT_NAME,PHONE_NO FROM STUDENT;
SELECT DISTINCT STUDENT_NAME FROM STUDENT;
SELECT COUNT(DISTINCT STUDENT_NAME)FROM STUDENT;
SELECT EMAIL FROM STUDENT WHERE STUDENT_NAME = "JHON";
SELECT * FROM STUDENT WHERE STUDENT_ID > 2 ;
SELECT * FROM STUDENT WHERE STUDENT_ID < 3;
SELECT * FROM STUDENT WHERE STUDENT_ID >=2;
SELECT * FROM STUDENT WHERE STUDENT_ID <=3;
SELECT * FROM STUDENT WHERE STUDENT_ID <>3;
SELECT * FROM STUDENT WHERE STUDENT_ID BETWEEN 3 AND 5 ;
SELECT STUDENT_NAME FROM STUDENT WHERE STUDENT_NAME LIKE "RAM";
SELECT * FROM STUDENT WHERE STUDENT_ID IN (1,3,5);
SELECT * FROM STUDENT WHERE STUDENT_NAME = "JHON" AND EMAIL = "JHON99@GMAIL.COM";
SELECT * FROM STUDENT WHERE STUDENT_NAME = "JHON" OR EMAIL = "JHON99@GMAIL.COM";
SELECT * FROM STUDENT WHERE NOT STUDENT_NAME = "JHON" AND NOT STUDENT_NAME="RAM" ;

-- -------------------------- DELETE --------------------------
DELETE FROM STUDENT WHERE STUDENT_NAME = "RAM";



-- -------------------------------------------------------------

-- -------------------------- DQL --------------------------

-- -------------------------- SELECT --------------------------

SELECT   STUDENT_NAME AS " STUDENT NAME  " , EMAIL AS "STUDENT EMAIL"  FROM STUDENT;
SELECT STUDENT_NAME,"MAIL ID : ",EMAIL FROM STUDENT;
SELECT  CONCAT(" STUDENT :" , STUDENT_NAME , "  EMAIL :", EMAIL)  AS STUDENT FROM STUDENT;

-- -------------------------- CALCULATING COLUMN VALUES --------------------------

SELECT STUDENT_ID,STUDENT_NAME,(STUDENT_ID * 100) AS LAB_ACCESS_ID FROM STUDENT;

-- -------------------------- WHERE CLAUSE --------------------------

SELECT   STUDENT_NAME AS " STUDENT NAME  " , EMAIL AS "STUDENT EMAIL"  FROM STUDENT WHERE STUDENT_NAME = "JHON";

-- -------------------------- COMPARISON AND LOGICAL OPERATION && RANGE OPERATOR && IN /NOT KEYWORD  --------------------------

SELECT * FROM STUDENT WHERE STUDENT_ID > 2 ;
SELECT * FROM STUDENT WHERE STUDENT_ID < 3;
SELECT * FROM STUDENT WHERE STUDENT_ID >=2;
SELECT * FROM STUDENT WHERE STUDENT_ID <=3;
SELECT * FROM STUDENT WHERE STUDENT_ID <>3;
SELECT * FROM STUDENT WHERE STUDENT_ID BETWEEN 3 AND 5 ;
SELECT * FROM STUDENT WHERE STUDENT_ID IN (1,3,5);
SELECT * FROM STUDENT WHERE STUDENT_NAME = "JHON" AND EMAIL = "JHON99@GMAIL.COM";
SELECT * FROM STUDENT WHERE STUDENT_NAME = "JHON" OR EMAIL = "JHON99@GMAIL.COM";
SELECT * FROM STUDENT WHERE NOT STUDENT_NAME = "JHON" AND NOT STUDENT_NAME="RAM" ;

-- -------------------------- LIKE , ORDERBY , TOP ,DISTINCT --------------------------

SELECT STUDENT_NAME FROM STUDENT WHERE STUDENT_NAME LIKE 'RAM';
SELECT * FROM STUDENT ORDER BY STUDENT_NAME;
SELECT  * FROM STUDENT LIMIT 0,2 ;
SELECT distinct STUDENT_NAME  FROM STUDENT ;

-- -------------------------- UNION CLAUSE --------------------------

SELECT * FROM STUDENT WHERE STUDENT_ID <2
UNION
SELECT * FROM STUDENT WHERE STUDENT_ID >4;

-- -------------------------- EXCEPT AND INTERSECT CLAUSES --------------------------

-- ------ NOT IN OPERATOR IS EQUIVALENT OF EXPACT IN MYSQL -------

SELECT * FROM STUDENT WHERE STUDENT_NAME NOT IN ("NIDIT","JHON");


-- -------------------------- DERIVED TABLES --------------------------

SELECT * FROM STUDENT AS GTU_STUDENTS WHERE STUDENT_ID > 3 ;

-- -------------------------- CTE --------------------------
   
-- in doubt 
-- -------------------------- STRING FUNCTION --------------------------

SELECT ascii();
